set -g default-terminal "screen-256color"
set -g history-limit 10000
# Use vim keybindings in copy mode
setw -g mode-keys vi

#----------------------------------
# Linux Clipboard
#----------------------------------
if-shell '[ $(uname) = "Linux" ]' \
"bind-key -T copy-mode-vi y send -X copy-pipe 'xclip -sel clip -i'"

#----------------------------------
# macOS Clipboard
#----------------------------------
# Setup 'v' to begin selection as in Vim
# Update default binding of `Enter` to also use copy-pipe
if-shell '[ $(uname) = "Darwin" ]' \
"bind-key -T copy-mode-vi v send -X begin-selection; bind-key -T copy-mode-vi y send -X copy-pipe 'reattach-to-user-namespace pbcopy'; unbind -T copy-mode-vi Enter; bind-key -T copy-mode-vi Enter send -X copy-pipe 'reattach-to-user-namespace pbcopy'"

#----------------------------------
# Vim/tmux Integration
#----------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#----------------------------------
# Mouse Support
#----------------------------------
set -g mouse on
